name: ci

on:
  push:
    branches:
      - main
  schedule:
    - cron: "*/10 * * * *"  #10分钟触发一次

jobs:
  autogreen:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    env:
      RANDOM_REPO_URL: ""

    steps:
      - name: Get Random Repository URL
        run: |          # 获取随机仓库地址
          random_repo_url=$(curl -s https://api.github.com/search/repositories?q=stars:>2&sort=stars&order=desc&per_page=100 | jq -r '.items | .[] | .html_url' | shuf -n 1)
          echo "Random repository URL: $random_repo_url"
          echo "RANDOM_REPO_URL=$random_repo_url" >> $GITHUB_ENV

      - name: Clone repository
        uses: actions/checkout@v4

      - name: Clone random repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.RANDOM_REPO_URL }}
          path: random_repo

      - name: Select and copy file
        run: |          # 选择一个随机文件
          random_file=$(find random_repo -type f | shuf -n 1)
          # 复制文件到目标仓库
          cp $random_file .
          # 查看复制的文件
          ls -l

      - name: Auto green
        env:
          USER_EMAIL: ${{ secrets.EMAIL }}
        run: |          
          messages=("Update documentation :art:" "a commit a day keeps your girlfriend away:checked_flag:" "Fix typo in README :zap:“:racehorse:" "Add unit tests for module X :fire:" "Refactor function Y for better performance :bug:" "Implement feature Z" "Update dependencies :ambulance:" "Improve error handling :sparkles:" "Optimize database queries :memo:" "Add missing comments :rocket:" "Adjust layout for mobile devices :tada:" "Resolve merge conflict :white_check_mark:" "Bump version number :lock:")
          idx=$((RANDOM % ${#messages[@]}))
          COMMIT_MESSAGE="${messages[$idx]}"
          git config --local user.email "$USER_EMAIL"
          git config --local user.name "${{ github.actor }}"
          git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git pull --rebase
          git add .
          git commit --allow-empty -m "$COMMIT_MESSAGE"
          git push
